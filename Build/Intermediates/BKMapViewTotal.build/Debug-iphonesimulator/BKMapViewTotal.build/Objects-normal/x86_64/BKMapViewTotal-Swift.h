// Generated by Apple Swift version 2.3 (swiftlang-800.10.12 clang-800.0.38)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import ObjectiveC;
#endif

#import "/Users/David/Desktop/BKMapViewTotal/BKMapViewTotal/BKMapViewTotal-Bridging-Header.h"

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UIWindow;
@class BMKMapManager;
@class UIApplication;
@class NSObject;

SWIFT_CLASS("_TtC14BKMapViewTotal11AppDelegate")
@interface AppDelegate : UIResponder <UIApplicationDelegate, BMKGeneralDelegate>
@property (nonatomic, strong) UIWindow * _Nullable window;
@property (nonatomic, strong) BMKMapManager * _Nullable _mapManager;
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary * _Nullable)launchOptions;
- (void)applicationWillResignActive:(UIApplication * _Nonnull)application;
- (void)applicationDidEnterBackground:(UIApplication * _Nonnull)application;
- (void)applicationWillEnterForeground:(UIApplication * _Nonnull)application;
- (void)applicationDidBecomeActive:(UIApplication * _Nonnull)application;
- (void)applicationWillTerminate:(UIApplication * _Nonnull)application;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC14BKMapViewTotal6Header")
@interface Header : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class BMKMapView;
@class BMKPointAnnotation;
@protocol BMKAnnotation;
@class BMKAnnotationView;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC14BKMapViewTotal14ViewController")
@interface ViewController : UIViewController <BMKMapViewDelegate>
@property (nonatomic, strong) BMKMapView * _Nullable _mapView;
@property (nonatomic, strong) BMKPointAnnotation * _Nullable pointAnnotation;
@property (nonatomic, strong) BMKPointAnnotation * _Nullable animatedAnnotation;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)addPointAnnotation;

/// *当mapView新添加overlay views时，调用此接口 *@param mapView 地图View *@param overlayViews 新添加的overlay views
- (void)mapView:(BMKMapView * _Null_unspecified)mapView didAddOverlayViews:(NSArray * _Null_unspecified)overlayViews;

/// <code>当addAnnotation后回调这个代理方法
/// *根据anntation生成对应的View
/// *@param mapView 地图View
/// *@param annotation 指定的标注
/// *@return 生成的标注View
/// 
/// </code>
- (BMKAnnotationView * _Null_unspecified)mapView:(BMKMapView * _Null_unspecified)mapView viewForAnnotation:(id <BMKAnnotation> _Null_unspecified)annotation;

/// *当mapView新添加annotation views时，调用此接口 *@param mapView 地图View *@param views 新添加的annotation views
- (void)mapView:(BMKMapView * _Null_unspecified)mapView didAddAnnotationViews:(NSArray * _Null_unspecified)views;

/// *当选中一个annotation views时，调用此接口 *@param mapView 地图View *@param views 选中的annotation views
- (void)mapView:(BMKMapView * _Null_unspecified)mapView didSelectAnnotationView:(BMKAnnotationView * _Null_unspecified)view;

/// *当取消选中一个annotation views时，调用此接口 *@param mapView 地图View *@param views 取消选中的annotation views
- (void)mapView:(BMKMapView * _Null_unspecified)mapView didDeselectAnnotationView:(BMKAnnotationView * _Null_unspecified)view;

/// *拖动annotation view时，若view的状态发生变化，会调用此函数。ios3.2以后支持 *@param mapView 地图View *@param view annotation view *@param newState 新状态 *@param oldState 旧状态
- (void)mapView:(BMKMapView * _Null_unspecified)mapView annotationView:(BMKAnnotationView * _Null_unspecified)view didChangeDragState:(NSUInteger)newState fromOldState:(NSUInteger)oldState;

/// *当点击annotation view弹出的泡泡时，调用此接口 *@param mapView 地图View *@param view 泡泡所属的annotation view
- (void)mapView:(BMKMapView * _Null_unspecified)mapView annotationViewForBubble:(BMKAnnotationView * _Null_unspecified)view;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
